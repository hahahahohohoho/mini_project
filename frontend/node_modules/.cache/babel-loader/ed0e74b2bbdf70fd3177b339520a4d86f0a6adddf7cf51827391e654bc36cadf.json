{"ast":null,"code":"// src/axios.js\nimport axios from 'axios';\nconst isLocal = process.env.REACT_APP_API_MODE === 'local';\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080/api'\n});\ninstance.interceptors.request.use(config => {\n  if (isLocal) {\n    // 요청 경로에 따라 로컬 파일 경로 설정\n    if (config.url === '/board') {\n      config.url = '/data/board.json';\n    } else if (config.url === '/sight') {\n      config.url = './sight (1).json';\n    } else if (config.url === '/board') {\n      config.url = '/data/board.json'; // 올바른 경로로 수정\n    }\n    config.baseURL = ''; // baseURL 무시\n  } else {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","isLocal","process","env","REACT_APP_API_MODE","instance","create","baseURL","interceptors","request","use","config","url","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["C:/LEECHANGSU_MAIN/mini_project/frontend/src/axios.js"],"sourcesContent":["// src/axios.js\r\nimport axios from 'axios';\r\nconst isLocal = process.env.REACT_APP_API_MODE === 'local';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:8080/api'\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    if (isLocal) {\r\n      // 요청 경로에 따라 로컬 파일 경로 설정\r\n      if (config.url === '/board') {\r\n        config.url = '/data/board.json';\r\n      } else if (config.url === '/sight') {\r\n        config.url = './sight (1).json';\r\n      } else if (config.url === '/board') {\r\n        config.url = '/data/board.json';  // 올바른 경로로 수정\r\n      }\r\n      config.baseURL = '';  // baseURL 무시\r\n    } else {\r\n    \r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nexport default instance;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,KAAK,OAAO;AAE1D,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,IAAIV,OAAO,EAAE;IACX;IACA,IAAIU,MAAM,CAACC,GAAG,KAAK,QAAQ,EAAE;MAC3BD,MAAM,CAACC,GAAG,GAAG,kBAAkB;IACjC,CAAC,MAAM,IAAID,MAAM,CAACC,GAAG,KAAK,QAAQ,EAAE;MAClCD,MAAM,CAACC,GAAG,GAAG,kBAAkB;IACjC,CAAC,MAAM,IAAID,MAAM,CAACC,GAAG,KAAK,QAAQ,EAAE;MAClCD,MAAM,CAACC,GAAG,GAAG,kBAAkB,CAAC,CAAE;IACpC;IACAD,MAAM,CAACJ,OAAO,GAAG,EAAE,CAAC,CAAE;EACxB,CAAC,MAAM;IAEL,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTF,MAAM,CAACK,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;IAClD;EACF;EACA,OAAOF,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AACD,eAAeb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}