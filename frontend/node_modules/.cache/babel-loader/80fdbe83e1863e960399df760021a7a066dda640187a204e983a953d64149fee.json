{"ast":null,"code":"var _jsxFileName = \"C:\\\\LEECHANGSU_MAIN\\\\mini_project\\\\frontend\\\\src\\\\components\\\\mypage\\\\MyBoardList.js\",\n  _s = $RefreshSig$();\nimport BoardTable from '../board/utils/BoardTable';\nimport Pagination from '../board/utils/Pagination';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyBoardList() {\n  _s();\n  const [myInfo, setMyInfo] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10; // 페이지당 항목 수\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loadMyBoard = async () => {\n      try {\n        const response = await axios.get('/auth/myinfo', {\n          params: {\n            username: localStorage.getItem('username')\n          }\n        });\n        const data = response.data.boards;\n        setMyInfo(data); // 전체 데이터를 한 번만 로드\n      } catch (error) {\n        console.error('Error fetching board data:', error);\n      }\n    };\n    loadMyBoard();\n  }, []); // 빈 배열로 설정하여 이 로직은 컴포넌트 마운트 시 한 번만 실행\n\n  // 페이지 전환 시 데이터를 슬라이스\n  const currentBoardItems = myInfo.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const handleRowClick = async boardItem => {\n    try {\n      const response = await axios.get(`/board/${boardItem.id}`);\n      const boardDetail = response.data;\n      navigate(`/detail/${boardItem.username}/${boardItem.title}`, {\n        state: {\n          boardItem: boardDetail\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching board details:', error);\n      alert('게시물 세부 정보를 가져오는 데 실패했습니다.');\n    }\n  };\n  const handlePageChange = pageNumber => {\n    console.log(currentBoardItems);\n    setCurrentPage(pageNumber); // 페이지 번호만 업데이트\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 min-h-screen flex flex-col justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: [localStorage.getItem(\"username\"), \"\\uB2D8\\uC774 \\uC791\\uC131\\uD55C \\uAC8C\\uC2DC\\uAE00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto flex-grow\",\n      children: /*#__PURE__*/_jsxDEV(BoardTable, {\n        boardItems: currentBoardItems,\n        handleRowClick: handleRowClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalItems: myInfo.length,\n      itemsPerPage: itemsPerPage,\n      currentPage: currentPage,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(MyBoardList, \"aqpIn51jHUCr/yrDUPzVSDJNkEQ=\", false, function () {\n  return [useNavigate];\n});\n_c = MyBoardList;\nvar _c;\n$RefreshReg$(_c, \"MyBoardList\");","map":{"version":3,"names":["BoardTable","Pagination","React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","MyBoardList","_s","myInfo","setMyInfo","currentPage","setCurrentPage","itemsPerPage","navigate","loadMyBoard","response","get","params","username","localStorage","getItem","data","boards","error","console","currentBoardItems","slice","handleRowClick","boardItem","id","boardDetail","title","state","alert","handlePageChange","pageNumber","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","boardItems","totalItems","length","onPageChange","_c","$RefreshReg$"],"sources":["C:/LEECHANGSU_MAIN/mini_project/frontend/src/components/mypage/MyBoardList.js"],"sourcesContent":["import BoardTable from '../board/utils/BoardTable';\r\nimport Pagination from '../board/utils/Pagination';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from '../../axios';\r\n\r\nexport default function MyBoardList() {\r\n    const [myInfo, setMyInfo] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 10; // 페이지당 항목 수\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const loadMyBoard = async () => {\r\n            try {\r\n                const response = await axios.get('/auth/myinfo', {\r\n                    params: { username: localStorage.getItem('username') },\r\n                });\r\n                const data = response.data.boards;\r\n                setMyInfo(data); // 전체 데이터를 한 번만 로드\r\n            } catch (error) {\r\n                console.error('Error fetching board data:', error);\r\n            }\r\n        };\r\n        loadMyBoard();\r\n    }, []); // 빈 배열로 설정하여 이 로직은 컴포넌트 마운트 시 한 번만 실행\r\n\r\n    // 페이지 전환 시 데이터를 슬라이스\r\n    const currentBoardItems = myInfo.slice(\r\n        (currentPage - 1) * itemsPerPage,\r\n        currentPage * itemsPerPage\r\n    );\r\n\r\n    const handleRowClick = async (boardItem) => {\r\n        try {\r\n            const response = await axios.get(`/board/${boardItem.id}`);\r\n            const boardDetail = response.data;\r\n            navigate(`/detail/${boardItem.username}/${boardItem.title}`, { state: { boardItem: boardDetail } });\r\n        } catch (error) {\r\n            console.error('Error fetching board details:', error);\r\n            alert('게시물 세부 정보를 가져오는 데 실패했습니다.');\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n        console.log(currentBoardItems)\r\n        setCurrentPage(pageNumber); // 페이지 번호만 업데이트\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4 min-h-screen flex flex-col justify-between\">\r\n            <h1 className=\"text-2xl font-bold mb-4 text-center\">{localStorage.getItem(\"username\")}님이 작성한 게시글</h1>\r\n            <div className=\"overflow-x-auto flex-grow\">\r\n                <BoardTable boardItems={currentBoardItems} handleRowClick={handleRowClick} />\r\n            </div>\r\n            <Pagination\r\n                totalItems={myInfo.length}\r\n                itemsPerPage={itemsPerPage}\r\n                currentPage={currentPage}\r\n                onPageChange={handlePageChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,2BAA2B;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMY,YAAY,GAAG,EAAE,CAAC,CAAC;EACzB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,cAAc,EAAE;UAC7CC,MAAM,EAAE;YAAEC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU;UAAE;QACzD,CAAC,CAAC;QACF,MAAMC,IAAI,GAAGN,QAAQ,CAACM,IAAI,CAACC,MAAM;QACjCb,SAAS,CAACY,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IACDT,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMW,iBAAiB,GAAGjB,MAAM,CAACkB,KAAK,CAClC,CAAChB,WAAW,GAAG,CAAC,IAAIE,YAAY,EAChCF,WAAW,GAAGE,YAClB,CAAC;EAED,MAAMe,cAAc,GAAG,MAAOC,SAAS,IAAK;IACxC,IAAI;MACA,MAAMb,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,UAAUY,SAAS,CAACC,EAAE,EAAE,CAAC;MAC1D,MAAMC,WAAW,GAAGf,QAAQ,CAACM,IAAI;MACjCR,QAAQ,CAAC,WAAWe,SAAS,CAACV,QAAQ,IAAIU,SAAS,CAACG,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;UAAEJ,SAAS,EAAEE;QAAY;MAAE,CAAC,CAAC;IACvG,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDU,KAAK,CAAC,2BAA2B,CAAC;IACtC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACrCX,OAAO,CAACY,GAAG,CAACX,iBAAiB,CAAC;IAC9Bd,cAAc,CAACwB,UAAU,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACI9B,OAAA;IAAKgC,SAAS,EAAC,kEAAkE;IAAAC,QAAA,gBAC7EjC,OAAA;MAAIgC,SAAS,EAAC,qCAAqC;MAAAC,QAAA,GAAEnB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAC,oDAAU;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrGrC,OAAA;MAAKgC,SAAS,EAAC,2BAA2B;MAAAC,QAAA,eACtCjC,OAAA,CAACR,UAAU;QAAC8C,UAAU,EAAElB,iBAAkB;QAACE,cAAc,EAAEA;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC,eACNrC,OAAA,CAACP,UAAU;MACP8C,UAAU,EAAEpC,MAAM,CAACqC,MAAO;MAC1BjC,YAAY,EAAEA,YAAa;MAC3BF,WAAW,EAAEA,WAAY;MACzBoC,YAAY,EAAEZ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACnC,EAAA,CAzDuBD,WAAW;EAAA,QAIdJ,WAAW;AAAA;AAAA6C,EAAA,GAJRzC,WAAW;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}