{"ast":null,"code":"var _jsxFileName = \"C:\\\\LEECHANGSU_MAIN\\\\mini_project\\\\frontend\\\\src\\\\Busan\\\\Page\\\\Login.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  var _s = $RefreshSig$();\n  const Login = () => {\n    _s();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loginCheck, setLoginCheck] = useState(false); //로그인 상태체크\n\n    const navigate = useNavigate(); //Navigate 는 특정 행동을 했을 때 \n    //해당 주소로 이동해줄 수 있게 만들어줍니다.\n\n    const handleLogin = async event => {\n      // 로그인 처리 로직을 구현합니다.\n      event.preventDefault();\n      //어떤 이벤트를 명시적으로 처리하지 않은 경우,\n      // 해당 이벤트에 대한 사용자 에이전트의 기본 동작을 실행하지 않도록 지정합니다.\n      await new Promise(r => setTimeout(r, 1000));\n      const response = await fetch(\"로그인 서버 주소\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const result = await response.json();\n      if (response.status === 200) {\n        //서버로부터 받은 응답(response)의 상태 코드가 200인지를 확인\n        setLoginCheck(false); //초기 로그인 상태는 false\n        // Store token in local storage\n        sessionStorage.setItem(\"token\", result.token);\n        sessionStorage.setItem(\"email\", result.email); // 여기서 userid를 저장합니다.\n        sessionStorage.setItem(\"role\", result.role); // 여기서 role를 저장합니다.\n        sessionStorage.setItem(\"storeid\", result.storeId); // 여기서 role를 저장합니다.\n        console.log(\"로그인성공, 이메일주소:\" + result.email);\n        navigate(\"/\"); // 로그인 성공시 홈으로 이동합니다.\n      } else {\n        setLoginCheck(true);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"On&Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), loginCheck && /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"\\uC774\\uBA54\\uC77C \\uD639\\uC740 \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uD2C0\\uB838\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signup-link\",\n          children: [\"\\uC544\\uC9C1 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  };\n  _s(Login, \"GC6S7NAAk+Iy+JqAKCUo6pKEdDM=\", false, function () {\n    return [useNavigate];\n  });\n}\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","$RefreshSig$","email","setEmail","password","setPassword","loginCheck","setLoginCheck","navigate","handleLogin","event","preventDefault","Promise","r","setTimeout","response","fetch","method","headers","body","JSON","stringify","result","json","status","sessionStorage","setItem","token","role","storeId","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","style","color","onClick","to","_c","$RefreshReg$"],"sources":["C:/LEECHANGSU_MAIN/mini_project/frontend/src/Busan/Page/Login.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nexport default function Login() {\r\n    const Login = () => {\r\n        const [email, setEmail] = useState(\"\");\r\n        const [password, setPassword]=useState(\"\");\r\n        const [loginCheck, setLoginCheck]= useState(false);//로그인 상태체크\r\n\r\n        const navigate = useNavigate();//Navigate 는 특정 행동을 했을 때 \r\n        //해당 주소로 이동해줄 수 있게 만들어줍니다.\r\n\r\n        const handleLogin = async (event) => {\r\n            // 로그인 처리 로직을 구현합니다.\r\n            event.preventDefault();\r\n            //어떤 이벤트를 명시적으로 처리하지 않은 경우,\r\n            // 해당 이벤트에 대한 사용자 에이전트의 기본 동작을 실행하지 않도록 지정합니다.\r\n            await new Promise((r) => setTimeout(r, 1000));\r\n            \r\n            const response = await fetch(\r\n              \"로그인 서버 주소\",\r\n              {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                  email: email,\r\n                  password: password,\r\n                }),\r\n              }\r\n            );\r\n            const result = await response.json();\r\n        \r\n            if (response.status === 200) {//서버로부터 받은 응답(response)의 상태 코드가 200인지를 확인\r\n              setLoginCheck(false);//초기 로그인 상태는 false\r\n              // Store token in local storage\r\n              sessionStorage.setItem(\"token\", result.token);\r\n              sessionStorage.setItem(\"email\", result.email); // 여기서 userid를 저장합니다.\r\n              sessionStorage.setItem(\"role\", result.role); // 여기서 role를 저장합니다.\r\n              sessionStorage.setItem(\"storeid\", result.storeId); // 여기서 role를 저장합니다.\r\n              console.log(\"로그인성공, 이메일주소:\" + result.email);\r\n              navigate(\"/\"); // 로그인 성공시 홈으로 이동합니다.\r\n            } else {\r\n              setLoginCheck(true);\r\n            }\r\n          };\r\n        \r\n          return (\r\n            <div className=\"login-container\">\r\n              <form className=\"login-form\" onSubmit={handleLogin}>\r\n                <h1>On&Off</h1>\r\n                <label htmlFor=\"username\">이메일</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n        \r\n                <label htmlFor=\"password\">비밀번호</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                 {loginCheck && (\r\n                <label  style={{color: \"red\"}}>이메일 혹은 비밀번호가 틀렸습니다.</label>\r\n                )}\r\n                <button onClick={handleLogin}>로그인</button>\r\n        \r\n                <p className=\"signup-link\">\r\n                  아직 회원이 아니신가요? <Link to=\"/signup\">회원가입</Link>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          );\r\n        };\r\n    }\r\n  \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}