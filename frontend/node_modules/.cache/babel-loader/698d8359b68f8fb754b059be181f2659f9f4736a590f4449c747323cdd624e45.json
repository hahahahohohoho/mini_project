{"ast":null,"code":"var _jsxFileName = \"C:\\\\LEECHANGSU_MAIN\\\\mini_project\\\\frontend\\\\src\\\\components\\\\board\\\\utils\\\\PostEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostEdit({\n  boardItem,\n  onSave,\n  onCancel\n}) {\n  _s();\n  const [editedTitle, setEditedTitle] = useState(boardItem.title); // 제목 수정\n  const [editedContent, setEditedContent] = useState(boardItem.content); // 내용 수정\n  const token = localStorage.getItem('token');\n  const handleSave = async () => {\n    try {\n      const result = await axios.put(`/board/${boardItem.id}`, {\n        title: editedTitle,\n        content: editedContent,\n        username: localStorage.getItem(\"username\")\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (result) {\n        onSave(editedTitle, editedContent); // 수정된 제목과 내용을 저장\n      }\n    } catch (error) {\n      console.error('Error editing post:', error);\n      alert('게시글 수정에 실패했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editedTitle,\n      onChange: e => setEditedTitle(e.target.value),\n      className: \"w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 mb-4\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: editedContent,\n      onChange: e => setEditedContent(e.target.value),\n      className: \"w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400\",\n      rows: \"4\",\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors duration-300\",\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        className: \"ml-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-300\",\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(PostEdit, \"bgmowVATFGO+PZNTgp3X29Q1A38=\");\n_c = PostEdit;\nvar _c;\n$RefreshReg$(_c, \"PostEdit\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PostEdit","boardItem","onSave","onCancel","_s","editedTitle","setEditedTitle","title","editedContent","setEditedContent","content","token","localStorage","getItem","handleSave","result","put","id","username","headers","Authorization","error","console","alert","children","type","value","onChange","e","target","className","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","rows","onClick","_c","$RefreshReg$"],"sources":["C:/LEECHANGSU_MAIN/mini_project/frontend/src/components/board/utils/PostEdit.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../../../axios';\r\n\r\nexport default function PostEdit({ boardItem, onSave, onCancel }) {\r\n  const [editedTitle, setEditedTitle] = useState(boardItem.title);  // 제목 수정\r\n  const [editedContent, setEditedContent] = useState(boardItem.content); // 내용 수정\r\n  const token = localStorage.getItem('token');\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const result = await axios.put(`/board/${boardItem.id}`, {\r\n        title: editedTitle,\r\n        content: editedContent,\r\n        username: localStorage.getItem(\"username\"),\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (result) {\r\n        onSave(editedTitle, editedContent);  // 수정된 제목과 내용을 저장\r\n      }\r\n    } catch (error) {\r\n      console.error('Error editing post:', error);\r\n      alert('게시글 수정에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={editedTitle}\r\n        onChange={(e) => setEditedTitle(e.target.value)}\r\n        className=\"w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 mb-4\"\r\n        placeholder=\"제목을 입력하세요\"\r\n      />\r\n      <textarea\r\n        value={editedContent}\r\n        onChange={(e) => setEditedContent(e.target.value)}\r\n        className=\"w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n        rows=\"4\"\r\n        placeholder=\"내용을 입력하세요\"\r\n      />\r\n      <div className=\"flex justify-end mt-4\">\r\n        <button\r\n          onClick={handleSave}\r\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors duration-300\"\r\n        >\r\n          저장\r\n        </button>\r\n        <button\r\n          onClick={onCancel}\r\n          className=\"ml-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-300\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,QAAQA,CAAC;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACK,SAAS,CAACM,KAAK,CAAC,CAAC,CAAE;EAClE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAACK,SAAS,CAACS,OAAO,CAAC,CAAC,CAAC;EACvE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,UAAUf,SAAS,CAACgB,EAAE,EAAE,EAAE;QACvDV,KAAK,EAAEF,WAAW;QAClBK,OAAO,EAAEF,aAAa;QACtBU,QAAQ,EAAEN,YAAY,CAACC,OAAO,CAAC,UAAU;MAC3C,CAAC,EAAE;QACDM,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUT,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,IAAII,MAAM,EAAE;QACVb,MAAM,CAACG,WAAW,EAAEG,aAAa,CAAC,CAAC,CAAE;MACvC;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CE,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErB,WAAY;MACnBsB,QAAQ,EAAGC,CAAC,IAAKtB,cAAc,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,SAAS,EAAC,uFAAuF;MACjGC,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFpC,OAAA;MACE2B,KAAK,EAAElB,aAAc;MACrBmB,QAAQ,EAAGC,CAAC,IAAKnB,gBAAgB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,SAAS,EAAC,kFAAkF;MAC5FM,IAAI,EAAC,GAAG;MACRL,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFpC,OAAA;MAAK+B,SAAS,EAAC,uBAAuB;MAAAN,QAAA,gBACpCzB,OAAA;QACEsC,OAAO,EAAEvB,UAAW;QACpBgB,SAAS,EAAC,gGAAgG;QAAAN,QAAA,EAC3G;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpC,OAAA;QACEsC,OAAO,EAAElC,QAAS;QAClB2B,SAAS,EAAC,iGAAiG;QAAAN,QAAA,EAC5G;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/B,EAAA,CA1DuBJ,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}