{"ast":null,"code":"var _jsxFileName = \"C:\\\\LEECHANGSU_MAIN\\\\mini_project\\\\frontend\\\\src\\\\components\\\\mypage\\\\MypageMain.js\",\n  _s = $RefreshSig$();\nimport axios from '../../axios';\nimport { React, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MyBoardList from './MyBoardList';\nimport MyReplyList from './MyReplyList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MypageMain() {\n  _s();\n  const [myState, setMyState] = useState('Board');\n  // 상태를 변경하는 함수\n  const changeReply = () => {\n    setMyState(myState === 'Board' ? 'Reply' : 'Board');\n    // 현재 상태가 'Board'이면 'Reply'로, 그렇지 않으면 'Board'로 변경\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: changeReply,\n      className: \"my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: myState === 'Board' ? 'ReplyList' : 'BoardList'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), myState === 'Board' ? /*#__PURE__*/_jsxDEV(MyBoardList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(MyReplyList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(MypageMain, \"BgZtu4jl7kySjB9ViLb5ruTrYk0=\");\n_c = MypageMain;\nvar _c;\n$RefreshReg$(_c, \"MypageMain\");","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","MyBoardList","MyReplyList","jsxDEV","_jsxDEV","MypageMain","_s","myState","setMyState","changeReply","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/LEECHANGSU_MAIN/mini_project/frontend/src/components/mypage/MypageMain.js"],"sourcesContent":["import axios from '../../axios';\r\nimport {React, useEffect, useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MyBoardList from './MyBoardList';\r\nimport MyReplyList from './MyReplyList';\r\n\r\n\r\nexport default function MypageMain() {\r\n  const [myState, setMyState] = useState('Board')\r\n   // 상태를 변경하는 함수\r\n   const changeReply = () => {\r\n    setMyState(myState === 'Board' ? 'Reply' : 'Board'); \r\n    // 현재 상태가 'Board'이면 'Reply'로, 그렇지 않으면 'Board'로 변경\r\n  };\r\n  return (\r\n    <div className='flex items-center flex-col'>\r\n      {/* changeReply 함수를 onClick 이벤트 핸들러로 지정 */}\r\n      <div onClick={changeReply} className='my-4'>\r\n        <h1>{myState === 'Board' ? 'ReplyList' : 'BoardList'}</h1>\r\n      </div>\r\n      \r\n      {/* 상태에 따라 컴포넌트를 조건부로 렌더링 */}\r\n      {myState === 'Board' ? <MyBoardList /> : <MyReplyList />}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,SAAQC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC9C;EACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACzBD,UAAU,CAACD,OAAO,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;IACnD;EACF,CAAC;EACD,oBACEH,OAAA;IAAKM,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBAEzCP,OAAA;MAAKQ,OAAO,EAAEH,WAAY;MAACC,SAAS,EAAC,MAAM;MAAAC,QAAA,eACzCP,OAAA;QAAAO,QAAA,EAAKJ,OAAO,KAAK,OAAO,GAAG,WAAW,GAAG;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EAGLT,OAAO,KAAK,OAAO,gBAAGH,OAAA,CAACH,WAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGZ,OAAA,CAACF,WAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAACV,EAAA,CAlBuBD,UAAU;AAAAY,EAAA,GAAVZ,UAAU;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}